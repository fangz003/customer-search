openapi: 3.0.0
info:
  title: Customer API
  version: 1.0.0

paths:
  /customers/listAllCustomers:
    get:
      summary: List all customers
      operationId: listCustomers
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/search/searchByFirstName:
    get:
      summary: Search customers by first name
      operationId: searchCustomersByFirstName
      parameters:
        - name: firstName
          in: query
          required: true
          schema:
            type: string
          description: The first name of the customer to search for
        - name: sortField
          in: query
          required: false
          schema:
            type: string
          description: The field to sort by (e.g., firstName, lastName, companyId)
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [ asc, desc ]
          description: The sort direction (asc or desc)
      responses:
        '200':
          description: A list of customers with the given first name
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          description: A user with the specified ID was not found.
        '503':
          description: Unexpected error.

  /customers/search/searchByLastName:
    get:
      summary: Search customers by last name
      operationId: searchCustomersByLastName
      parameters:
        - name: lastName
          in: query
          required: true
          schema:
            type: string
          description: The last name of the customer to search for
        - name: sortField
          in: query
          required: false
          schema:
            type: string
          description: The field to sort by (e.g., firstName, lastName, companyId)
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [ asc, desc ]
          description: The sort direction (asc or desc)
      responses:
        '200':
          description: A list of customers with the given last name
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          description: A user with the specified ID was not found.
        '503':
          description: Unexpected error.
  /customers/search/searchByCompanyId:
    get:
      summary: Search customers by customer id
      operationId: searchCustomersByCompanyId
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: integer
          description: The company id of the customer to search for
        - name: sortField
          in: query
          required: false
          schema:
            type: string
          description: The field to sort by (e.g., firstName, lastName, companyId)
        - name: sortDirection
          in: query
          required: false
          schema:
            type: string
            enum: [ asc, desc ]
          description: The sort direction (asc or desc)
      responses:
        '200':
          description: A list of customers with the given company name
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          description: A user with the specified ID was not found.
        '503':
          description: Unexpected error.

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
          pattern: ^[A-Z]+$
          maxLength: 50
          minLength: 1
          description: id of customer
        lastName:
          type: string
          pattern: ^[A-Z]+$
          maxLength: 50
          minLength: 1
          description: last name of customer
        company:
          type: object
          $ref: '#/components/schemas/Company'
    Company:
      type: object
      properties:
        id:
          type: integer
          description: id of the company
        name:
          type: string
          pattern: /^\w+$/
          maxLength: 50
          minLength: 1
          description: name of the company that the customer works for
